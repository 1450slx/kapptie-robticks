{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_autonomous\" id=\"(:qJsxwqcjJ$C}Dt_MO#\" x=\"570\" y=\"-30\"><next><block type=\"v5_motion_spin_for\" id=\"Nk;#;vhkb+gRVOb[A!-i\"><field name=\"MOTOR\">Left</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"eu2Op`9QzEcFP:cy#[9I\"><field name=\"NUM\">360</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"x6LIK6*N%O75oYl=m.80\"><field name=\"MOTOR\">Left_3</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"`a,3(x0?b3};eN/D=Tge\"><field name=\"NUM\">360</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"4CZy@-?_$7spUSV~AX-9\"><field name=\"MOTOR\">Right</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#y57kVa9-DXk0)g79opj\"><field name=\"NUM\">360</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"LOf!GBslO3j#lpVbN`XX\"><field name=\"MOTOR\">Right_8</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"+v}]k_Bh[04+Ej17Qk8N\"><field name=\"NUM\">360</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"J22w-v7$*wew6YX4)CUF\"><field name=\"MOTOR\">Left</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"eM(R._Szi7HEdxEmyEhJ\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"xY1pAS%24zIg~m+cZgHT\"><field name=\"MOTOR\">Left_3</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"=Tx(9*rDz9.zeXJ3Oba:\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"z3q.{W^31}@nwTe6EIw3\"><field name=\"MOTOR\">Right</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"p)eq{oX`b8]YHl^k-+2,\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"~koF@UP=5/|?WE4{?a1d\"><field name=\"MOTOR\">Right_8</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\";gsjR+@}7_-6UrF|Pgxb\"><field name=\"NUM\">50</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,2],"name":"Left","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[11,12],"name":"Right","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[3],"name":"Left_3","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[13],"name":"Right_8","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftMotorA = motor(PORT1, ratio6_1, false);\nmotor LeftMotorB = motor(PORT2, ratio6_1, false);\nmotor_group Left = motor_group(LeftMotorA, LeftMotorB);\n\nmotor RightMotorA = motor(PORT11, ratio6_1, false);\nmotor RightMotorB = motor(PORT12, ratio6_1, false);\nmotor_group Right = motor_group(RightMotorA, RightMotorB);\n\ncontroller Controller1 = controller(primary);\nmotor Left_3 = motor(PORT3, ratio6_1, false);\n\nmotor Right_8 = motor(PORT13, ratio6_1, false);\n\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nfloat myVariable;\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  Left.spinFor(forward, 360.0, degrees, true);\n  Left_3.spinFor(forward, 360.0, degrees, true);\n  Right.spinFor(reverse, 360.0, degrees, true);\n  Right_8.spinFor(reverse, 360.0, degrees, true);\n  Left.spinFor(forward, 50.0, turns, false);\n  Left_3.spinFor(forward, 50.0, turns, false);\n  Right.spinFor(forward, 50.0, turns, false);\n  Right_8.spinFor(forward, 50.0, turns, false);\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n}","target":"Physical"}