{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" deletable=\"false\" x=\"-3370\" y=\"70\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"rDjD$h}LO.Y9242?YgjI\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"-G(4.}qy%y{{e:j(moH5\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"4uP|Kbq3Fe`Z1#1H]?l6\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"jLGq4WwvnvG3(`F-;t##\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_spin\" id=\";HQ;Mm/Ns.bJ)lNGEja=\"><field name=\"MOTOR\">claw</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_drivetrain_drive_for\" id=\"GX;T[8S,iH%$TuLs!l+I\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"LAb)a;m8sXgRsJs8N3$L\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"OF5FLqSqW*m@8Wa2B%TZ\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Xn61hdz1M%rSXTM!:rNT\"><field name=\"NUM\">865</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"RiB}|?mT47I]Fim6%Ygg\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"^m_K70Yf/KitB}BuW0T|\"><field name=\"NUM\">1137</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"=@Y)Nk=_v$4{]@%mQ/I1\"><field name=\"MOTOR\">claw</field><field name=\"DIRECTION\">rev</field><next><block type=\"v5_motion_stop_driving\" id=\"8;~/BRTI=l|@T8*:;c1N\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[4],"name":"claw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[1,2,11,12,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio6_1","gearRatio":"1:1","direction":"rev","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.61.0","minVersion":"4.60.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor claw = motor(PORT4, ratio6_1, false);\n\nmotor leftMotorA = motor(PORT1, ratio6_1, true);\nmotor leftMotorB = motor(PORT2, ratio6_1, true);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT11, ratio6_1, false);\nmotor rightMotorB = motor(PORT12, ratio6_1, false);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Drivetrain.driveFor(forward, 100.0, inches, true);\n  claw.spin(forward);\n  Drivetrain.driveFor(forward, 1000.0, inches, true);\n  Drivetrain.turnFor(right, 865.0, degrees, true);\n  Drivetrain.driveFor(forward, 1137.0, inches, true);\n  claw.spin(reverse);\n  Drivetrain.stop();\n  return 0;\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}